{
  "_from": "eachr@^4.5.0",
  "_id": "eachr@4.5.0",
  "_inBundle": false,
  "_integrity": "sha512-9I664RWp6p8jvcHZIwo7bWaiSaUmA1wNSLKwNZEiaYjqiTARq3cGjyRiIunsopZv4QMmX3T5Hs17QoPAzdYxfg==",
  "_location": "/flex-tool-bar/eachr",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "eachr@^4.5.0",
    "name": "eachr",
    "escapedName": "eachr",
    "rawSpec": "^4.5.0",
    "saveSpec": null,
    "fetchSpec": "^4.5.0"
  },
  "_requiredBy": [
    "/flex-tool-bar/extract-opts"
  ],
  "_resolved": "https://registry.npmjs.org/eachr/-/eachr-4.5.0.tgz",
  "_shasum": "495eb3aab6a41811da1e04e510424df32075cf04",
  "_spec": "eachr@^4.5.0",
  "_where": "C:\\Users\\jerem\\AppData\\Local\\Temp\\apm-install-dir-2020620-15684-okkcxs.m5jml\\node_modules\\flex-tool-bar\\node_modules\\extract-opts",
  "author": {
    "name": "2011+ Bevry Pty Ltd",
    "email": "us@bevry.me",
    "url": "http://bevry.me"
  },
  "babel": {
    "env": {
      "edition-browsers": {
        "sourceType": "script",
        "presets": [
          [
            "@babel/preset-env",
            {
              "targets": "defaults",
              "modules": false
            }
          ]
        ],
        "plugins": [
          "@babel/proposal-object-rest-spread"
        ]
      }
    }
  },
  "badges": {
    "list": [
      "travisci",
      "npmversion",
      "npmdownloads",
      "daviddm",
      "daviddmdev",
      "---",
      "githubsponsors",
      "patreon",
      "flattr",
      "liberapay",
      "buymeacoffee",
      "opencollective",
      "crypto",
      "paypal",
      "wishlist"
    ],
    "config": {
      "githubSponsorsUsername": "balupton",
      "buymeacoffeeUsername": "balupton",
      "cryptoURL": "https://bevry.me/crypto",
      "flattrUsername": "balupton",
      "liberapayUsername": "bevry",
      "opencollectiveUsername": "bevry",
      "patreonUsername": "bevry",
      "paypalURL": "https://bevry.me/paypal",
      "wishlistURL": "https://bevry.me/wishlist",
      "travisTLD": "com"
    }
  },
  "browser": "edition-browsers/index.js",
  "bugs": {
    "url": "https://github.com/bevry/eachr/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Benjamin Lupton",
      "email": "b@lupton.cc",
      "url": "http://balupton.com"
    },
    {
      "name": "Sean Fridman",
      "email": "fridman@mail.sfsu.edu",
      "url": "www.seanfridman.com"
    },
    {
      "name": "Rob Loach",
      "email": "robloach@gmail.com",
      "url": "http://robloach.net"
    },
    {
      "name": "Sean Fridman",
      "email": "mail@seanfridman.com",
      "url": "http://seanfridman.com"
    },
    {
      "name": "dependabot-preview[bot]",
      "url": "http://github.com/apps/dependabot-preview"
    }
  ],
  "dependencies": {
    "typechecker": "^6.2.0"
  },
  "deprecated": false,
  "description": "Give eachr an item to iterate (array, object or map) and an iterator, then in return eachr gives iterator the value and key of each item, and will stop if the iterator returned false.",
  "devDependencies": {
    "@babel/cli": "^7.7.5",
    "@babel/core": "^7.7.5",
    "@babel/plugin-proposal-object-rest-spread": "^7.7.4",
    "@babel/preset-env": "^7.7.6",
    "assert-helpers": "^5.8.0",
    "eslint": "^6.7.2",
    "eslint-config-bevry": "^2.2.0",
    "eslint-config-prettier": "^6.7.0",
    "eslint-plugin-babel": "^5.3.0",
    "eslint-plugin-prettier": "^3.1.1",
    "kava": "^4.3.0",
    "prettier": "^1.19.1",
    "projectz": "^1.15.0",
    "semver": "^6.3.0",
    "valid-directory": "^1.5.0"
  },
  "editions": [
    {
      "description": "esnext source code with require for modules",
      "directory": "source",
      "entry": "index.js",
      "tags": [
        "javascript",
        "esnext",
        "require"
      ],
      "engines": {
        "node": "8 || 10 || 12",
        "browsers": false
      }
    },
    {
      "description": "esnext compiled for browsers with require for modules",
      "directory": "edition-browsers",
      "entry": "index.js",
      "tags": [
        "javascript",
        "require"
      ],
      "engines": {
        "node": false,
        "browsers": "defaults"
      }
    }
  ],
  "engines": {
    "node": ">=8"
  },
  "eslintConfig": {
    "extends": [
      "bevry"
    ]
  },
  "funding": "https://bevry.me/fund",
  "homepage": "https://github.com/bevry/eachr",
  "keywords": [
    "flow",
    "each",
    "cycle",
    "forEach",
    "map",
    "object",
    "array"
  ],
  "license": "MIT",
  "main": "source/index.js",
  "maintainers": [
    {
      "name": "Benjamin Lupton",
      "email": "b@lupton.cc",
      "url": "http://balupton.com"
    }
  ],
  "name": "eachr",
  "prettier": {
    "semi": false,
    "singleQuote": true
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bevry/eachr.git"
  },
  "scripts": {
    "our:clean": "rm -Rf ./docs ./edition* ./es2015 ./es5 ./out ./.next",
    "our:compile": "npm run our:compile:edition-browsers",
    "our:compile:edition-browsers": "env BABEL_ENV=edition-browsers babel --out-dir ./edition-browsers ./source",
    "our:deploy": "echo no need for this project",
    "our:meta": "npm run our:meta:projectz",
    "our:meta:projectz": "projectz compile",
    "our:release": "npm run our:release:prepare && npm run our:release:check-changelog && npm run our:release:check-dirty && npm run our:release:tag && npm run our:release:push",
    "our:release:check-changelog": "cat ./HISTORY.md | grep v$npm_package_version || (echo add a changelog entry for v$npm_package_version && exit -1)",
    "our:release:check-dirty": "git diff --exit-code",
    "our:release:prepare": "npm run our:clean && npm run our:compile && npm run our:test && npm run our:meta",
    "our:release:push": "git push origin master && git push origin --tags",
    "our:release:tag": "export MESSAGE=$(cat ./HISTORY.md | sed -n \"/## v$npm_package_version/,/##/p\" | sed 's/## //' | awk 'NR>1{print buf}{buf = $0}') && test \"$MESSAGE\" || (echo 'proper changelog entry not found' && exit -1) && git tag v$npm_package_version -am \"$MESSAGE\"",
    "our:setup": "npm run our:setup:install",
    "our:setup:install": "npm install",
    "our:test": "npm run our:verify && npm test",
    "our:verify": "npm run our:verify:directory && npm run our:verify:eslint && npm run our:verify:prettier",
    "our:verify:directory": "npx valid-directory",
    "our:verify:eslint": "eslint --fix --ignore-pattern '**/*.d.ts' --ignore-pattern '**/vendor/' --ignore-pattern '**/node_modules/' --ext .mjs,.js,.jsx,.ts,.tsx ./source",
    "our:verify:prettier": "prettier --write ./source/**",
    "test": "node ./source/test.js"
  },
  "type": "commonjs",
  "version": "4.5.0"
}
