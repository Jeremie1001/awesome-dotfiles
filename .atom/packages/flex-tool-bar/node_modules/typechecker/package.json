{
  "_from": "typechecker@^6.2.0",
  "_id": "typechecker@6.4.0",
  "_inBundle": false,
  "_integrity": "sha512-EbOu+9szY13mhl0EsvLXnR+pTCa3gTHQQPLdce72ujcC9fRHXlVFBNXtHeRhgzLxLlKUh4zA9C0tezLDgshf+A==",
  "_location": "/flex-tool-bar/typechecker",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "typechecker@^6.2.0",
    "name": "typechecker",
    "escapedName": "typechecker",
    "rawSpec": "^6.2.0",
    "saveSpec": null,
    "fetchSpec": "^6.2.0"
  },
  "_requiredBy": [
    "/flex-tool-bar/eachr",
    "/flex-tool-bar/extract-opts"
  ],
  "_resolved": "https://registry.npmjs.org/typechecker/-/typechecker-6.4.0.tgz",
  "_shasum": "c087dc744c5a0f17524d58a17eb31a9660ab7324",
  "_spec": "typechecker@^6.2.0",
  "_where": "C:\\Users\\jerem\\AppData\\Local\\Temp\\apm-install-dir-2020620-15684-okkcxs.m5jml\\node_modules\\flex-tool-bar\\node_modules\\extract-opts",
  "author": {
    "name": "2013+ Bevry Pty Ltd",
    "email": "us@bevry.me",
    "url": "http://bevry.me"
  },
  "badges": {
    "list": [
      "travisci",
      "npmversion",
      "npmdownloads",
      "daviddm",
      "daviddmdev",
      "---",
      "githubsponsors",
      "patreon",
      "flattr",
      "liberapay",
      "buymeacoffee",
      "opencollective",
      "crypto",
      "paypal",
      "wishlist"
    ],
    "config": {
      "githubSponsorsUsername": "balupton",
      "buymeacoffeeUsername": "balupton",
      "cryptoURL": "https://bevry.me/crypto",
      "flattrUsername": "balupton",
      "liberapayUsername": "bevry",
      "opencollectiveUsername": "bevry",
      "patreonUsername": "bevry",
      "paypalURL": "https://bevry.me/paypal",
      "wishlistURL": "https://bevry.me/wishlist",
      "travisTLD": "com"
    }
  },
  "browser": "edition-browsers/index.js",
  "bugs": {
    "url": "https://github.com/bevry/typechecker/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Benjamin Lupton",
      "email": "b@lupton.cc",
      "url": "http://balupton.com"
    },
    {
      "name": "Joe Gesualdo",
      "email": "joegesualdo@gmail.com",
      "url": "joegesualdo.com"
    },
    {
      "name": "Sean Fridman",
      "email": "mail@seanfridman.com",
      "url": "http://seanfridman.com"
    },
    {
      "name": "Matt Bierner",
      "url": "http://mattbierner.com"
    }
  ],
  "deprecated": false,
  "description": "Utilities to get and check variable types (isString, isPlainObject, isRegExp, etc)",
  "devDependencies": {
    "@bevry/update-contributors": "^1.0.1",
    "@typescript-eslint/eslint-plugin": "^2.30.0",
    "@typescript-eslint/parser": "^2.30.0",
    "assert-helpers": "^6.1.0",
    "eslint": "^6.8.0",
    "eslint-config-bevry": "^3.3.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-prettier": "^3.1.3",
    "kava": "^4.4.0",
    "prettier": "^2.0.5",
    "projectz": "^1.19.1",
    "surge": "^0.21.3",
    "typedoc": "^0.17.6",
    "typescript": "^3.8.3",
    "valid-directory": "^1.6.0",
    "valid-module": "^1.0.0"
  },
  "editions": [
    {
      "description": "TypeScript source code with Import for modules",
      "directory": "source",
      "entry": "index.ts",
      "tags": [
        "typescript",
        "import"
      ],
      "engines": false
    },
    {
      "description": "TypeScript compiled against ESNext for Node.js with Require for modules",
      "directory": "edition-esnext",
      "entry": "index.js",
      "tags": [
        "javascript",
        "esnext",
        "require"
      ],
      "engines": {
        "node": "8 || 10 || 12 || 13 || 14",
        "browsers": false
      }
    },
    {
      "description": "TypeScript compiled against ES2019 for web browsers with Import for modules",
      "directory": "edition-browsers",
      "entry": "index.js",
      "tags": [
        "javascript",
        "import"
      ],
      "engines": {
        "node": false,
        "browsers": "defaults"
      }
    }
  ],
  "engines": {
    "node": ">=8"
  },
  "eslintConfig": {
    "extends": [
      "bevry"
    ]
  },
  "funding": "https://bevry.me/fund",
  "homepage": "https://github.com/bevry/typechecker",
  "keywords": [
    "array",
    "assert",
    "assertion",
    "async",
    "async function",
    "async-function",
    "asyncFunction",
    "bool",
    "boolean",
    "browser",
    "check",
    "check-type",
    "checking",
    "class",
    "class-identifier",
    "class-instance",
    "compare",
    "conventional class",
    "conventional-class",
    "conventionalClass",
    "date",
    "define-type",
    "empty",
    "empty array",
    "empty keys",
    "empty map",
    "empty plain object",
    "empty-array",
    "empty-keys",
    "empty-map",
    "empty-plain-object",
    "emptyArray",
    "emptyKeys",
    "emptyMap",
    "emptyPlainObject",
    "error",
    "function",
    "get object type",
    "get type",
    "get-object-type",
    "get-type",
    "getObjectType",
    "getType",
    "instanceof",
    "is",
    "is arguments",
    "is array",
    "is async",
    "is async function",
    "is bool",
    "is boolean",
    "is class",
    "is conventional class",
    "is date",
    "is empty array",
    "is empty keys",
    "is empty map",
    "is empty plain object",
    "is empty weak map",
    "is error",
    "is function",
    "is map",
    "is native class",
    "is null",
    "is nullish",
    "is number",
    "is object",
    "is plain object",
    "is regexp",
    "is string",
    "is sync",
    "is sync function",
    "is undefined",
    "is weak map",
    "is-arguments",
    "is-array",
    "is-async",
    "is-async-function",
    "is-bool",
    "is-boolean",
    "is-class",
    "is-conventional-class",
    "is-date",
    "is-empty-array",
    "is-empty-keys",
    "is-empty-map",
    "is-empty-plain-object",
    "is-empty-weak-map",
    "is-error",
    "is-function",
    "is-map",
    "is-native-class",
    "is-null",
    "is-nullish",
    "is-number",
    "is-object",
    "is-plain-obj",
    "is-plain-object",
    "is-regexp",
    "is-string",
    "is-sync",
    "is-sync-function",
    "is-undefined",
    "is-weak-map",
    "isArguments",
    "isArray",
    "isAsyncFunction",
    "isBool",
    "isBoolean",
    "isClass",
    "isConventionalClass",
    "isDate",
    "isEmptyArray",
    "isEmptyKeys",
    "isEmptyMap",
    "isEmptyPlainObject",
    "isEmptyWeakMap",
    "isError",
    "isFunction",
    "isMap",
    "isNativeClass",
    "isNull",
    "isNullish",
    "isNumber",
    "isObject",
    "isRegExp",
    "isString",
    "isSync",
    "isSyncFunction",
    "isUndefined",
    "isWeakMap",
    "javascript",
    "javascript-type",
    "keys",
    "kind",
    "map",
    "module",
    "native",
    "native class",
    "native-class",
    "nativeClass",
    "null",
    "number",
    "object",
    "plain",
    "plain object",
    "plain objects",
    "plain-object",
    "plain-objects",
    "plainObject",
    "primitive",
    "primitive-types",
    "pure",
    "regex",
    "regexp",
    "regular expression",
    "simple",
    "string",
    "sync",
    "syncFunction",
    "test",
    "type",
    "type-check",
    "type-checker",
    "type-checking",
    "typechecker",
    "typed",
    "typeguards",
    "typeof",
    "types",
    "typescript",
    "undefined",
    "util",
    "utility",
    "validate",
    "validation",
    "vanilla",
    "verify",
    "weak map",
    "weak-map",
    "weakMap",
    "what-type"
  ],
  "license": "MIT",
  "main": "edition-esnext/index.js",
  "maintainers": [
    {
      "name": "Benjamin Lupton",
      "email": "b@lupton.cc",
      "url": "http://balupton.com"
    }
  ],
  "module": "edition-browsers/index.js",
  "name": "typechecker",
  "prettier": {
    "semi": false,
    "singleQuote": true
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bevry/typechecker.git"
  },
  "scripts": {
    "our:clean": "rm -Rf ./docs ./edition* ./es2015 ./es5 ./out ./.next",
    "our:compile": "npm run our:compile:edition-browsers && npm run our:compile:edition-esnext",
    "our:compile:edition-browsers": "tsc --module ESNext --target ES2019 --outDir ./edition-browsers --project tsconfig.json && test -d edition-browsers/source && ( mv edition-browsers/source edition-temp && rm -Rf edition-browsers && mv edition-temp edition-browsers ) || true",
    "our:compile:edition-esnext": "tsc --module commonjs --target ESNext --outDir ./edition-esnext --project tsconfig.json && test -d edition-esnext/source && ( mv edition-esnext/source edition-temp && rm -Rf edition-esnext && mv edition-temp edition-esnext ) || true",
    "our:deploy": "echo no need for this project",
    "our:meta": "npm run our:meta:contributors && npm run our:meta:docs && npm run our:meta:projectz",
    "our:meta:contributors": "update-contributors",
    "our:meta:docs": "npm run our:meta:docs:typedoc",
    "our:meta:docs:typedoc": "rm -Rf ./docs && typedoc --mode file --exclude '**/+(*test*|node_modules)' --excludeExternals --name \"$npm_package_name\" --readme ./README.md --out ./docs ./source",
    "our:meta:projectz": "projectz compile",
    "our:release": "npm run our:release:prepare && npm run our:release:check-changelog && npm run our:release:check-dirty && npm run our:release:tag && npm run our:release:push",
    "our:release:check-changelog": "cat ./HISTORY.md | grep v$npm_package_version || (echo add a changelog entry for v$npm_package_version && exit -1)",
    "our:release:check-dirty": "git diff --exit-code",
    "our:release:prepare": "npm run our:clean && npm run our:compile && npm run our:test && npm run our:meta",
    "our:release:push": "git push origin master && git push origin --tags",
    "our:release:tag": "export MESSAGE=$(cat ./HISTORY.md | sed -n \"/## v$npm_package_version/,/##/p\" | sed 's/## //' | awk 'NR>1{print buf}{buf = $0}') && test \"$MESSAGE\" || (echo 'proper changelog entry not found' && exit -1) && git tag v$npm_package_version -am \"$MESSAGE\"",
    "our:setup": "npm run our:setup:install",
    "our:setup:install": "npm install",
    "our:test": "npm run our:verify && npm test",
    "our:verify": "npm run our:verify:directory && npm run our:verify:eslint && npm run our:verify:module && npm run our:verify:prettier && npm run our:verify:typescript",
    "our:verify:directory": "valid-directory",
    "our:verify:eslint": "eslint --fix --ignore-pattern '**/*.d.ts' --ignore-pattern '**/vendor/' --ignore-pattern '**/node_modules/' --ext .mjs,.js,.jsx,.ts,.tsx ./source",
    "our:verify:module": "valid-module",
    "our:verify:prettier": "prettier --write .",
    "our:verify:typescript": "tsc --noEmit --project tsconfig.json",
    "test": "node ./edition-esnext/test.js"
  },
  "title": "TypeChecker",
  "type": "commonjs",
  "types": "source/index.ts",
  "version": "6.4.0"
}
