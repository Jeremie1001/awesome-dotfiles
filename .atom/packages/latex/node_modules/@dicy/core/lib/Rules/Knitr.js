"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Rule_1 = require("../Rule");
function escapePath(filePath) {
    return filePath.replace(/\\/g, '\\\\');
}
class Knitr extends Rule_1.default {
    constructCommand() {
        const escapedFilePath = escapePath(this.firstParameter.filePath);
        const outputPath = this.options.knitrOutputPath;
        const escapedDutputPath = escapePath(this.resolvePath(outputPath));
        const lines = ['library(knitr)'];
        const outputs = [outputPath];
        // If concordance option is enabled the add the option
        if (this.options.knitrConcordance) {
            lines.push('opts_knit$set(concordance=TRUE)');
            outputs.push(outputPath.replace(/\.[^.]*$/, '-concordance.tex'));
        }
        lines.push(`knit('${escapedFilePath}','${escapedDutputPath}')`);
        return {
            args: ['Rscript', '-e', lines.join(';')],
            cd: '$ROOTDIR',
            severity: 'error',
            outputs: outputs.map(file => ({ file }))
        };
    }
}
Knitr.parameterTypes = [new Set(['RNoWeb'])];
Knitr.description = 'Runs knitr on Rnw files.';
exports.default = Knitr;
