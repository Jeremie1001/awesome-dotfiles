"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("fs-extra");
const path = require("path");
const yaml = require("js-yaml");
function getOptionDefinitions() {
    return __awaiter(this, void 0, void 0, function* () {
        const filePath = path.resolve(__dirname, '..', 'resources', 'option-schema.yaml');
        const contents = yield fs.readFile(filePath, { encoding: 'utf-8' });
        const schema = yaml.safeLoad(contents);
        const options = [];
        for (const name in schema) {
            const option = schema[name];
            option.name = name;
            options.push(option);
        }
        return options;
    });
}
exports.getOptionDefinitions = getOptionDefinitions;
