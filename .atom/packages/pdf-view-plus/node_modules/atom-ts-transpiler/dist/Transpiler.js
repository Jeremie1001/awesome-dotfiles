"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path = require("path");
class Transpiler {
    constructor(dir) {
        this.dir = dir;
        Transpiler.transpilers.set(dir, this);
    }
    static get(tsDir) {
        if (Transpiler.transpilers.has(tsDir)) {
            return Transpiler.transpilers.get(tsDir);
        }
        return new Transpiler(tsDir);
    }
    get module() {
        if (this.myModule === undefined) {
            try {
                this.myModule = require(this.dir);
            }
            catch (err) {
                console.error(`Failed to load transpiler module for directory ${this.dir}.\nDo you have TypeScript installed as a peerDependency? Error message was:\n${err.message}`);
                this.myModule = null;
            }
        }
        return this.myModule;
    }
    get version() {
        if (this.myVersion === undefined) {
            try {
                const packageJson = path.join(this.dir, 'package.json');
                const packageData = require(packageJson);
                this.myVersion = packageData.version;
            }
            catch (err) {
                console.error(`Failed to load transpiler package.json for directory ${this.dir}.\nDo you have TypeScript installed as a peerDependency? Error message was:\n${err.message}`);
                this.myVersion = null;
            }
        }
        return this.myVersion;
    }
}
Transpiler.transpilers = new Map();
exports.default = Transpiler;
